(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[102],{4333:function(a,b,c){(window.__NEXT_P=window.__NEXT_P||[]).push(["/courses/spring-security/lessons/install-spring-security",function(){return c(298)}])},476:function(d,b,a){"use strict";var e=a(7568),c=a(4051),f=a.n(c),g=a(5893),h=a(637),i=a(7294),j=a(1896);b.Z=function(a){var l,b=a.fileName,m=a.href,c=a.language,d=void 0===c?"java":c,n=a.children,k=(0,i.useState)(!1),o=k[0],q=k[1],p=(l=(0,e.Z)(f().mark(function a(){return f().wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,navigator.clipboard.writeText(n);case 2:q(!0),setTimeout(function(){return q(!1)},6e3);case 4:case"end":return a.stop()}},a)})),function(){return l.apply(this,arguments)});return(0,g.jsxs)("div",{className:"border rounded fs-6 my-4",children:[b&&(0,g.jsxs)("div",{className:"p-3 bg-light border-bottom",children:[(0,g.jsx)("span",{className:"font-monospace",children:(0,g.jsx)("a",{href:m,target:"_blank",children:b})}),(0,g.jsx)("span",{className:"float-end cursor-pointer","data-bs-toggle":"tooltip","data-bs-title":"Copy code",onClick:p,children:(0,g.jsx)("i",{className:"bi-clipboard"})})]}),(0,g.jsx)("pre",{className:"m-0 px-3 pb-3",children:(0,g.jsx)("code",{className:"language-".concat(d),children:(0,g.jsx)("span",{dangerouslySetInnerHTML:{__html:h.Z.highlight(n,{language:d}).value}})})}),o&&(0,g.jsx)(j.Z,{children:"Code copied to clipboard"})]})}},9963:function(d,b,a){"use strict";a.d(b,{aC:function(){return h},k8:function(){return i},nL:function(){return g}});var e=a(5893),c=a(4046),f=a.n(c);function g(a){var b=a.children;return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)("h1",{className:"display-5 mt-2 mb-2",children:b}),(0,e.jsx)("p",{className:f().underline})]})}function h(a){var b=a.children;return(0,e.jsx)("h3",{className:"fw-light mt-5 mb-2",children:b})}function i(a){var b=a.children;return(0,e.jsx)("h4",{className:"fw-light mt-5 mb-2",children:b})}},4621:function(c,a,b){"use strict";var d=b(5893);a.Z=function(a){var c=a.src,b=a.title;return(0,d.jsxs)("div",{className:"p-3",children:[(0,d.jsx)("div",{className:"mb-3 text-secondary text-center",children:(0,d.jsx)("em",{children:b})}),(0,d.jsx)("img",{className:"img-fluid rounded border shadow",src:c,alt:b})]})}},7291:function(d,b,a){"use strict";var e=a(5893),c=a(9472),f=a.n(c);b.Z=function(a){var b=a.children;return(0,e.jsx)("mark",{className:"font-monospace border rounded p-1 ".concat(f().mark),children:b})}},298:function(f,b,a){"use strict";a.r(b);var g=a(5893),h=a(9963),i=a(130),j=a(7291),k=a(476),l=a(4621),c=a(3274),d=a(9927),e=a(358);b.default=(0,c.default)(function(a){var b=a.githubPath;return(0,g.jsxs)(g.Fragment,{children:[(0,g.jsxs)("section",{children:[(0,g.jsx)(h.nL,{children:"Install Spring Security"}),(0,g.jsxs)(i.Z,{children:["Let's add Spring Security to the application by adding ",(0,g.jsx)(j.Z,{children:"spring-boot-starter-security"})," dependency to the ",(0,g.jsx)(j.Z,{children:"pom.xml"})," as below:"]}),(0,g.jsx)(k.Z,{href:b+"/pom.xml",fileName:"pom.xml",language:"xml",children:"\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n"}),(0,g.jsxs)(i.Z,{children:["Adding any framework doesn't normally have any immediate effect until we provide the corresponding configuration. But by just adding Spring Security dependency, it secures all the resources (incl. static resources) by default. Restart the application and send a GET request to ",(0,g.jsx)("u",{children:"ListCourses"})," API in Postman, instead of receiving the list of courses we will receive ",(0,g.jsx)("em",{children:"401 Unauthorized"})," error."]}),(0,g.jsx)(l.Z,{src:"/assets/images/spring-security/lesson02-01.png",title:"401 Unauthorized error status in Postman"}),(0,g.jsxs)(i.Z,{children:["Now let's access the same API from the browser, instead of getting ",(0,g.jsx)("em",{children:"401 Unauthorized"})," error we are redirected to a Login page which was not created by us in the application."]}),(0,g.jsx)(l.Z,{src:"/assets/images/spring-security/lesson02-02.png",title:"302 Found redirect error redirecting the browser to the login page"})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"How do we access the APIs?"}),(0,g.jsxs)(i.Z,{children:["Spring Security creates an in-memory user with username ",(0,g.jsx)(j.Z,{children:"user"})," and a randomly generated password which can be found in the console:"]}),(0,g.jsx)(k.Z,{children:"\nUsing generated security password: fdea9fea-3b53-43f8-b78b-046ca27b03af\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\n"}),(0,g.jsx)(i.Z,{children:"This password changes each time we re-run the application. If we enter the credentials in the login form, we will be redirected to the requested API URL where we can see the list of courses."}),(0,g.jsx)(l.Z,{src:"/assets/images/spring-security/lesson02-03.png",title:"Provide credential in Spring Security default login page"}),(0,g.jsx)(l.Z,{src:"/assets/images/spring-security/lesson02-04.png",title:"List of courses response for the entered credentials in the browser"}),(0,g.jsx)(i.Z,{children:"Similarly let's go back to Postman, choose Basic Auth in Authorization tab, and enter the same credentials, we will receive the list of courses as API response."}),(0,g.jsx)(l.Z,{src:"/assets/images/spring-security/lesson02-05.png",title:"List of courses response for the entered credentials in Postman"}),(0,g.jsxs)(i.Z,{children:["We can notice Spring Security behaves differently while accessing the API from Postman and Browser. This is because of different ",(0,g.jsx)(j.Z,{children:"AuthenticationEntryPoint"})," implementations used to start the authentication process."]}),(0,g.jsxs)(i.Z,{children:[(0,g.jsx)(j.Z,{children:"Basic Auth"})," is the out-of-the-box authentication mechanism enabled by Spring Security. And therefore ",(0,g.jsx)(j.Z,{children:"BasicAuthenticationEntryPoint"})," is the default ",(0,g.jsx)(j.Z,{children:"AuthenticationEntryPoint"}),". It responds with ",(0,g.jsx)("em",{children:"401 Unauthorized"})," error with ",(0,g.jsx)(j.Z,{children:"WWW-Authenticate"})," header value ",(0,g.jsx)(j.Z,{children:'Basic realm="Realm"'})," for any unauthenticated requests. This header value enabled us to know the authentication method used to access the resource while using Postman."]}),(0,g.jsxs)(i.Z,{children:["Whereas, if the unauthenticated request has any of the following ",(0,g.jsx)(j.Z,{children:"Accept"})," header values: ",(0,g.jsx)("em",{children:"text/html, application/xml, application/xhtml+xml"}),", Spring Security will then replace the default ",(0,g.jsx)(j.Z,{children:"AuthenticationEntryPoint"})," with ",(0,g.jsx)(j.Z,{children:"LoginUrlAuthenticationEntryPoint"}),". It responds with ",(0,g.jsx)("em",{children:"302 redirect"})," error and redirects the browser to the default login page provided by Spring Security. Thus Basic Auth is replaced with form based login authentication mechanism while using browser."]})]})]})},(0,e.s)(d.Z,"install-spring-security"))},4046:function(a){a.exports={heading:"Heading_heading__aP_DN",underline:"Heading_underline__sSwtx"}},9472:function(a){a.exports={mark:"Mark_mark__8gh_T"}}},function(a){a.O(0,[734,428,637,274,774,888,179],function(){var b;return a(a.s=4333)}),_N_E=a.O()}])