(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[146],{7008:function(a,b,c){(window.__NEXT_P=window.__NEXT_P||[]).push(["/courses/spring-security/lessons/invalidate-token",function(){return c(3113)}])},476:function(d,b,a){"use strict";var e=a(7568),c=a(4051),f=a.n(c),g=a(5893),h=a(637),i=a(7294),j=a(1896);b.Z=function(a){var l,b=a.fileName,m=a.href,c=a.language,d=void 0===c?"java":c,n=a.children,k=(0,i.useState)(!1),o=k[0],q=k[1],p=(l=(0,e.Z)(f().mark(function a(){return f().wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,navigator.clipboard.writeText(n);case 2:q(!0),setTimeout(function(){return q(!1)},6e3);case 4:case"end":return a.stop()}},a)})),function(){return l.apply(this,arguments)});return(0,g.jsxs)("div",{className:"border rounded fs-6 my-4",children:[b&&(0,g.jsxs)("div",{className:"p-3 bg-light border-bottom",children:[(0,g.jsx)("span",{className:"font-monospace",children:(0,g.jsx)("a",{href:m,target:"_blank",children:b})}),(0,g.jsx)("span",{className:"float-end cursor-pointer","data-bs-toggle":"tooltip","data-bs-title":"Copy code",onClick:p,children:(0,g.jsx)("i",{className:"bi-clipboard"})})]}),(0,g.jsx)("pre",{className:"m-0 px-3 pb-3",children:(0,g.jsx)("code",{className:"language-".concat(d),children:(0,g.jsx)("span",{dangerouslySetInnerHTML:{__html:h.Z.highlight(n,{language:d}).value}})})}),o&&(0,g.jsx)(j.Z,{children:"Code copied to clipboard"})]})}},9963:function(d,b,a){"use strict";a.d(b,{aC:function(){return h},k8:function(){return i},nL:function(){return g}});var e=a(5893),c=a(4046),f=a.n(c);function g(a){var b=a.children;return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)("h1",{className:"display-5 mt-2 mb-2",children:b}),(0,e.jsx)("p",{className:f().underline})]})}function h(a){var b=a.children;return(0,e.jsx)("h3",{className:"fw-light mt-5 mb-2",children:b})}function i(a){var b=a.children;return(0,e.jsx)("h4",{className:"fw-light mt-5 mb-2",children:b})}},4621:function(c,a,b){"use strict";var d=b(5893);a.Z=function(a){var c=a.src,b=a.title;return(0,d.jsxs)("div",{className:"p-3",children:[(0,d.jsx)("div",{className:"mb-3 text-secondary text-center",children:(0,d.jsx)("em",{children:b})}),(0,d.jsx)("img",{className:"img-fluid rounded border shadow",src:c,alt:b})]})}},7291:function(d,b,a){"use strict";var e=a(5893),c=a(9472),f=a.n(c);b.Z=function(a){var b=a.children;return(0,e.jsx)("mark",{className:"font-monospace border rounded p-1 ".concat(f().mark),children:b})}},6614:function(d,b,a){"use strict";var e=a(5893),c=a(3394),f=a.n(c);b.Z=function(a){var b=a.title,c=a.children;return(0,e.jsxs)("section",{className:"px-3 pt-1 my-5 ".concat(f().notes),children:[(0,e.jsxs)("h4",{className:"mb-3",children:[(0,e.jsx)("i",{className:"bi bi-info-circle me-2"}),void 0===b?"Note":b]}),c]})}},3113:function(f,b,a){"use strict";a.r(b);var g=a(5893),h=a(9963),i=a(130),j=a(7291),k=a(476);a(4621);var l=a(6614),c=a(3274),d=a(9927),e=a(358);b.default=(0,c.default)(function(b){var a=b.githubPath;return(0,g.jsxs)(g.Fragment,{children:[(0,g.jsxs)("section",{children:[(0,g.jsx)(h.nL,{children:"Invalidate Token"}),(0,g.jsx)(i.Z,{children:"Any web application allows the user to voluntarily logout or expires their session (not necessarily HttpSession) in case of inactivity for a long time. This can be done from SPA (Single Page Application) by just getting rid of the token stored somewhere and redirecting to the Login page. But the proper way to make this happen is to handle it with a dedicated and secured API to invalidate the token."})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"Invalidate token service"}),(0,g.jsxs)(i.Z,{children:["We will create a ",(0,g.jsx)(j.Z,{children:"deleteToken()"})," in ",(0,g.jsx)(j.Z,{children:"UserService"})," in order to specifically update the ",(0,g.jsx)("em",{children:"token"})," and ",(0,g.jsx)("em",{children:"tokenExpiryTime"})," to null for the authenticated user identified by ",(0,g.jsx)("em",{children:"username"}),"."]}),(0,g.jsx)(k.Z,{fileName:"UserService.java",href:a+"/src/main/java/com/facadecode/spring/security/service/UserService.java",children:"\n@Service\npublic class UserService {\n    // Other methods omitted for brevity\n\n    public void deleteToken(String username) {\n        AppUser appUser = this.get(username);\n        appUser.setToken(null);\n        appUser.setTokenExpiryTime(null);\n        appUserRepository.save(appUser);\n    }\n}\n"}),(0,g.jsxs)(i.Z,{children:["Now we will call the above method from ",(0,g.jsx)(j.Z,{children:"AuthenticationService"})," by passing the ",(0,g.jsx)("em",{children:"username"})," retrieved from the authenticated ",(0,g.jsx)(j.Z,{children:"Authentication"})," object stored in ",(0,g.jsx)(j.Z,{children:"SecurityContext"}),"."]}),(0,g.jsx)(k.Z,{fileName:"AuthenticationService.java",href:a+"/src/main/java/com/facadecode/spring/security/service/AuthenticationService.java",children:"\n@Service\npublic class AuthenticationService {\n    // Other methods omitted for brevity\n\n    public void invalidateToken() {\n        userService.deleteToken(authenticationFacade.getAuthentication().getName());\n    }\n}\n"})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"Invalidate token API"}),(0,g.jsx)(i.Z,{children:"Let's create a REST API which calls the above service method to invalidate the token."}),(0,g.jsx)(k.Z,{fileName:"AuthenticationController.java",href:a+"/src/main/java/com/facadecode/spring/security/controller/AuthenticationController.java",children:'\n@RestController\n@RequestMapping("auth")\npublic class AuthenticationController {\n    // Other details omitted for brevity\n\n    @DeleteMapping("token")\n    public ResponseEntity invalidateToken() {\n        authenticationService.invalidateToken();\n        return ResponseEntity.noContent().build();\n    }\n}\n'})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"Secure delete token service"}),(0,g.jsxs)(i.Z,{children:["Similar to ",(0,g.jsx)(j.Z,{children:"updateToken()"})," service method we should not allow anyone to delete the token anonymously. We will secure the ",(0,g.jsx)(j.Z,{children:"deleteToken()"})," service method with the same pre-authorize condition as in ",(0,g.jsx)(j.Z,{children:"updateToken()"})," to ensure only the authenticated user deletes his own token. Let's define a constant variable in ",(0,g.jsx)(j.Z,{children:"Authority"})," class exclusively for authorizing the user to delete the token and annotate the ",(0,g.jsx)(j.Z,{children:"deleteToken()"})," like below:"]}),(0,g.jsx)(k.Z,{fileName:"UserService.java",href:a+"/src/main/java/com/facadecode/spring/security/service/UserService.java",children:"\n@PreAuthorize(Authority.DELETE_TOKEN)\npublic void deleteToken(String username) {\n    // Other details omitted for brevity\n}\n"}),(0,g.jsx)(l.Z,{children:(0,g.jsxs)(i.Z,{children:["Please note we do not need to change anything in ",(0,g.jsx)(j.Z,{children:"HttpSecurity"}),", as we have configured ",(0,g.jsx)("em",{children:"/auth/token"})," endpoint to be public only for POST method. So DELETE method is secured by default letting only the authenticated user to delete/invalidate his own token."]})}),(0,g.jsxs)(i.Z,{children:["Restart the application, and generate a token from ",(0,g.jsx)("u",{children:"GenerateToken"})," API with Admin user credential. Now send a DELETE request to the same endpoint with the generated token as Bearer Token. This will reset the token and tokenExpiryTime column for the Admin user to null in the ",(0,g.jsx)(j.Z,{children:"APP_USER"})," table. We can no more use the same token for any protected APIs for the Admin user."]})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"Downside of Opaque Tokens"}),(0,g.jsx)(i.Z,{children:"With so many steps to implement token-based authentication mechanism, it is quite not simpler than the out of the box Basic Auth. Though it is quite effective and efficient and addresses most of the issues of Basic Auth but it also comes along with its own limitations. And this is not because of the authentication mechanism itself, but because of the type of the token we are using so far."}),(0,g.jsxs)("ul",{children:[(0,g.jsxs)("li",{children:["These tokens are called ",(0,g.jsx)("strong",{children:"opaque tokens"}),", as the name implies we can not get any information out of the random string. There is no way to verify from the token to whom it was issued to (Subject)."]}),(0,g.jsxs)("li",{children:["Single Page Applications (SPA) receiving this token can not decide what the user is allowed to do in the user interface from the token. It has to depend on a separate endpoint (in most cases it ends with url ",(0,g.jsx)("em",{children:"/me"})," or ",(0,g.jsx)("em",{children:"/profile"}),") to get the user profile and their permissions. These tokens can only be used as a means of authentication and not for authorization."]}),(0,g.jsxs)("li",{children:["As these are opaque tokens, it should always be backed by a persistent datastore. In our case we had to associate the token with the user and it's expiry time in the database along with the ",(0,g.jsx)(j.Z,{children:"AppUser"})," record."]}),(0,g.jsx)("li",{children:"API request spanning multiple microservices, where the token has to be relayed across each microservice requires a round trip to the datastore in each microservice just to validate the token."})]})]})]})},(0,e.s)(d.Z,"invalidate-token"))},4046:function(a){a.exports={heading:"Heading_heading__aP_DN",underline:"Heading_underline__sSwtx"}},9472:function(a){a.exports={mark:"Mark_mark__8gh_T"}},3394:function(a){a.exports={notes:"Notes_notes__up3CK"}}},function(a){a.O(0,[734,428,637,274,774,888,179],function(){var b;return a(a.s=7008)}),_N_E=a.O()}])