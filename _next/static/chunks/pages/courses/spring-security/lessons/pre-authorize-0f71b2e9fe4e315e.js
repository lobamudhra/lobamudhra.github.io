(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[943],{9306:function(a,b,c){(window.__NEXT_P=window.__NEXT_P||[]).push(["/courses/spring-security/lessons/pre-authorize",function(){return c(9375)}])},2018:function(d,b,a){"use strict";var e=a(5893),c=a(5927),f=a.n(c);b.Z=function(a){var c=a.href,d=a.children,b=a.target;return(0,e.jsxs)("a",{href:c,target:void 0===b?"":b,className:"text-decoration-none","data-bs-toggle":"tooltip","data-bs-title":"Read article",children:[(0,e.jsx)("i",{className:"bi bi-file-text ".concat(f().linkIcon)}),(0,e.jsx)("span",{className:f().linkText,children:d})]})}},476:function(d,b,a){"use strict";var e=a(7568),c=a(4051),f=a.n(c),g=a(5893),h=a(637),i=a(7294),j=a(1896);b.Z=function(a){var l,b=a.fileName,m=a.href,c=a.language,d=void 0===c?"java":c,n=a.children,k=(0,i.useState)(!1),o=k[0],q=k[1],p=(l=(0,e.Z)(f().mark(function a(){return f().wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,navigator.clipboard.writeText(n);case 2:q(!0),setTimeout(function(){return q(!1)},6e3);case 4:case"end":return a.stop()}},a)})),function(){return l.apply(this,arguments)});return(0,g.jsxs)("div",{className:"border rounded fs-6 my-4",children:[b&&(0,g.jsxs)("div",{className:"p-3 bg-light border-bottom",children:[(0,g.jsx)("span",{className:"font-monospace",children:(0,g.jsx)("a",{href:m,target:"_blank",children:b})}),(0,g.jsx)("span",{className:"float-end cursor-pointer","data-bs-toggle":"tooltip","data-bs-title":"Copy code",onClick:p,children:(0,g.jsx)("i",{className:"bi-clipboard"})})]}),(0,g.jsx)("pre",{className:"m-0 px-3 pb-3",children:(0,g.jsx)("code",{className:"language-".concat(d),children:(0,g.jsx)("span",{dangerouslySetInnerHTML:{__html:h.Z.highlight(n,{language:d}).value}})})}),o&&(0,g.jsx)(j.Z,{children:"Code copied to clipboard"})]})}},9963:function(d,b,a){"use strict";a.d(b,{aC:function(){return h},k8:function(){return i},nL:function(){return g}});var e=a(5893),c=a(4046),f=a.n(c);function g(a){var b=a.children;return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)("h1",{className:"display-5 mt-2 mb-2",children:b}),(0,e.jsx)("p",{className:f().underline})]})}function h(a){var b=a.children;return(0,e.jsx)("h3",{className:"fw-light mt-5 mb-2",children:b})}function i(a){var b=a.children;return(0,e.jsx)("h4",{className:"fw-light mt-5 mb-2",children:b})}},7291:function(d,b,a){"use strict";var e=a(5893),c=a(9472),f=a.n(c);b.Z=function(a){var b=a.children;return(0,e.jsx)("mark",{className:"font-monospace border rounded p-1 ".concat(f().mark),children:b})}},3968:function(d,b,a){"use strict";var e=a(5893),c=a(3394),f=a.n(c);b.Z=function(a){var b=a.title,c=a.children;return(0,e.jsxs)("section",{className:"px-3 pt-1 my-5 ".concat(f().notes),children:[(0,e.jsxs)("h4",{className:"mb-3",children:[(0,e.jsx)("i",{className:"bi bi-info-circle me-2"}),void 0===b?"Note":b]}),c]})}},9375:function(f,b,a){"use strict";a.r(b);var g=a(5893),h=a(9963),i=a(130),j=a(7291),k=a(476),c=a(3274),d=a(9927),e=a(358),l=a(3968),m=a(2018);b.default=(0,c.default)(function(b){var a=b.githubPath;return(0,g.jsxs)(g.Fragment,{children:[(0,g.jsxs)("section",{children:[(0,g.jsx)(h.nL,{children:"PreAuthorize"}),(0,g.jsx)(h.aC,{children:"Service layer security"}),(0,g.jsxs)(i.Z,{children:["So far we have secured the API URLs using ",(0,g.jsx)(j.Z,{children:"antMatchers()"})," based on roles and permissions in ",(0,g.jsx)(j.Z,{children:"HttpSecurity"})," configuration. For few reasons discussed in this ",(0,g.jsx)(m.Z,{href:"https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html#page-title",target:"_blank",children:"section"}),", Spring Security recommends not to rely entirely on Web request security. Instead Security defined at the Service layer is much more robust and harder to bypass."]}),(0,g.jsxs)(i.Z,{children:["Service layer security is about securing the service methods which can be achieved using Spring Security's Method security annotations. As recommended by Spring Security, let's constrain ourselves using simple antPatterns in the Web request security, and move the permission based access model to the Service layer using ",(0,g.jsx)(j.Z,{children:"@PreAuthorize"})," annotation."]})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"@PreAuthorize"}),(0,g.jsxs)(i.Z,{children:[(0,g.jsx)(j.Z,{children:"@PreAuthorize"})," annotation provides expression-based access control using SpEL (Spring Expression Language). It checks the given expression before entering the method. Some of the valid PreAuthorize annotations are:"]}),(0,g.jsxs)("ul",{className:"list-unstyled overflow-auto py-3",children:[(0,g.jsx)("li",{children:(0,g.jsx)(j.Z,{children:"@PreAuthorize(\"hasRole('ROLE_ADMIN')\")"})}),(0,g.jsx)("li",{children:(0,g.jsx)(j.Z,{children:"@PreAuthorize(\"hasAuthority('LIST_STUDENTS')\")"})})]}),(0,g.jsxs)(i.Z,{children:["Here the expression resembles the method we used along with ",(0,g.jsx)(j.Z,{children:"antMatchers()"})," in ",(0,g.jsx)(j.Z,{children:"HttpSecurity"})," configuration. We will use ",(0,g.jsx)(j.Z,{children:"hasAuthority()"})," expression with the appropriate ",(0,g.jsx)(j.Z,{children:"PermissionEnum"})," instances to secure the service methods by following the same permission-based access model like below:"]}),(0,g.jsx)(k.Z,{fileName:"CourseService.java",href:a+"/src/main/java/com/facadecode/spring/security/service/CourseService.java",children:'\n@PreAuthorize("hasAuthority(T(com.thecodefacts.spring.security.enums.PermissionEnum).PLAY_COURSE.name())")  \npublic Course play(Long courseId) {\n}\n'}),(0,g.jsx)(i.Z,{children:"SpEL expects the fully qualified name of the PermissionEnum instances. It may seem verbose but it is better to use Enums for type safety reasons rather than using String literals. As the SpEL expressions are validated on application startup, any typo mistake in the expression using enums will throw Exception."})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"SpEL expression constants"}),(0,g.jsx)(i.Z,{children:"SpEL expression must always be a String constant. Let's move all the possible expressions in a constant class like below:"}),(0,g.jsx)(k.Z,{fileName:"Authority.java",href:a+"/src/main/java/com/facadecode/spring/security/constant/SecurityConstants.java",children:'\npublic class Authority {  \n    public static final String LIST_STUDENTS = "hasAuthority(T(com.thecodefacts.spring.security.enums.PermissionEnum).LIST_STUDENTS.name())";\n    public static final String LIST_INSTRUCTORS = "hasAuthority(T(com.thecodefacts.spring.security.enums.PermissionEnum).LIST_INSTRUCTORS.name())";\n    public static final String VIEW_PROFILE = "hasAuthority(T(com.thecodefacts.spring.security.enums.PermissionEnum).VIEW_PROFILE.name())";\n    public static final String CREATE_COURSE = "hasAuthority(T(com.thecodefacts.spring.security.enums.PermissionEnum).CREATE_COURSE.name())";\n    public static final String UPDATE_COURSE = "hasAuthority(T(com.thecodefacts.spring.security.enums.PermissionEnum).UPDATE_COURSE.name())";\n    public static final String PLAY_COURSE = "hasAuthority(T(com.thecodefacts.spring.security.enums.PermissionEnum).PLAY_COURSE.name())";\n}\n'}),(0,g.jsxs)(i.Z,{children:["Now we can simplify the above ",(0,g.jsx)(j.Z,{children:"@PreAuthorize"})," annotation using the constants like below:"]}),(0,g.jsx)(k.Z,{fileName:"CourseService.java",href:a+"/src/main/java/com/facadecode/spring/security/service/CourseService.java",children:"\n@PreAuthorize(Authority.PLAY_COURSE)\npublic Course play(Long courseId) {\n}\n"})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"Refactor HttpSecurity"}),(0,g.jsxs)(i.Z,{children:["Since we have moved all the permission based access controls to the respective service methods, we no longer have to secure the corresponding REST APIs in ",(0,g.jsx)(j.Z,{children:"HttpSecurity"}),' configuration. Also as recommended by Spring Security we will use "deny-by-default" approach using ',(0,g.jsx)(j.Z,{children:"anyRequest().authenticated()"})," and use simple ant paths to just permit the public APIs."]}),(0,g.jsxs)(i.Z,{children:["More importantly in order to enable method security annotations like ",(0,g.jsx)(j.Z,{children:"PreAuthorize"})," and ",(0,g.jsx)(j.Z,{children:"PostAuthorize"})," annotate ",(0,g.jsx)(j.Z,{children:"ApiSecurityConfig"})," with ",(0,g.jsx)(j.Z,{children:"@EnableGlobalMethodSecurity"})," with ",(0,g.jsx)("em",{children:"prePostEnabled"})," value as ",(0,g.jsx)("em",{children:"true"}),"."]}),(0,g.jsx)(k.Z,{fileName:"ApiSecurityConfig.java",href:a+"/src/main/java/com/facadecode/spring/security/config/ApiSecurityConfig.java",children:"\n@Configuration\n@EnableGlobalMethodSecurity(prePostEnabled = true)\npublic class ApiSecurityConfig {\n    @Bean\n    public SecurityFilterChain apiFilterChain(HttpSecurity http) throws Exception {\n        http\n            .csrf().disable()\n            .authorizeRequests(auth -> auth\n                .antMatchers(GET, PUBLIC_API_LIST).permitAll()\n                .anyRequest().authenticated()\n            )\n            .httpBasic();\n        return http.build();\n    }\n}\n"}),(0,g.jsxs)(i.Z,{children:["There will not be any change in the Security behaviour with the shift from Web request security to Service layer security. All the authenticated requests will be handled by the APIs now, but only authorized requests makes into the Service method. Any unauthorized request to the Service method will be thrown back with ",(0,g.jsx)("em",{children:"403 Forbidden"})," error by the Method security annotation."]})]}),(0,g.jsx)(l.Z,{children:(0,g.jsx)(i.Z,{children:"You may often find developers using Method security annotations in Controller methods, though it is not restricted to do so. But Spring Security recommends applying them to the Service layer because Controller is simply the incorrect architectural layer to implement authorization decisions concerning services layer methods or domain object instances."})})]})},(0,e.s)(d.Z,"pre-authorize"))},5927:function(a){a.exports={linkIcon:"ArticleLink_linkIcon__cf7b_",linkText:"ArticleLink_linkText__b7K5H"}},4046:function(a){a.exports={heading:"Heading_heading__aP_DN",underline:"Heading_underline__sSwtx"}},9472:function(a){a.exports={mark:"Mark_mark__8gh_T"}},3394:function(a){a.exports={notes:"Notes_notes__up3CK"}}},function(a){a.O(0,[734,428,637,274,774,888,179],function(){var b;return a(a.s=9306)}),_N_E=a.O()}])