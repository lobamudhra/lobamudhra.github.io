(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[493],{7043:function(a,b,c){(window.__NEXT_P=window.__NEXT_P||[]).push(["/courses/spring-security/lessons/define-permissions",function(){return c(7427)}])},476:function(d,b,a){"use strict";var e=a(7568),c=a(4051),f=a.n(c),g=a(5893),h=a(637),i=a(7294),j=a(1896);b.Z=function(a){var l,b=a.fileName,m=a.href,c=a.language,d=void 0===c?"java":c,n=a.children,k=(0,i.useState)(!1),o=k[0],q=k[1],p=(l=(0,e.Z)(f().mark(function a(){return f().wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,navigator.clipboard.writeText(n);case 2:q(!0),setTimeout(function(){return q(!1)},6e3);case 4:case"end":return a.stop()}},a)})),function(){return l.apply(this,arguments)});return(0,g.jsxs)("div",{className:"border rounded fs-6 my-4",children:[b&&(0,g.jsxs)("div",{className:"p-3 bg-light border-bottom",children:[(0,g.jsx)("span",{className:"font-monospace",children:(0,g.jsx)("a",{href:m,target:"_blank",children:b})}),(0,g.jsx)("span",{className:"float-end cursor-pointer","data-bs-toggle":"tooltip","data-bs-title":"Copy code",onClick:p,children:(0,g.jsx)("i",{className:"bi-clipboard"})})]}),(0,g.jsx)("pre",{className:"m-0 px-3 pb-3",children:(0,g.jsx)("code",{className:"language-".concat(d),children:(0,g.jsx)("span",{dangerouslySetInnerHTML:{__html:h.Z.highlight(n,{language:d}).value}})})}),o&&(0,g.jsx)(j.Z,{children:"Code copied to clipboard"})]})}},9963:function(d,b,a){"use strict";a.d(b,{aC:function(){return h},k8:function(){return i},nL:function(){return g}});var e=a(5893),c=a(4046),f=a.n(c);function g(a){var b=a.children;return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)("h1",{className:"display-5 mt-2 mb-2",children:b}),(0,e.jsx)("p",{className:f().underline})]})}function h(a){var b=a.children;return(0,e.jsx)("h3",{className:"fw-light mt-5 mb-2",children:b})}function i(a){var b=a.children;return(0,e.jsx)("h4",{className:"fw-light mt-5 mb-2",children:b})}},7291:function(d,b,a){"use strict";var e=a(5893),c=a(9472),f=a.n(c);b.Z=function(a){var b=a.children;return(0,e.jsx)("mark",{className:"font-monospace border rounded p-1 ".concat(f().mark),children:b})}},7427:function(f,b,a){"use strict";a.r(b);var g=a(5893),h=a(9963),i=a(130),j=a(7291),k=a(476),c=a(3274),d=a(9927),e=a(358);b.default=(0,c.default)(function(b){var a=b.githubPath;return(0,g.jsxs)(g.Fragment,{children:[(0,g.jsxs)("section",{children:[(0,g.jsx)(h.nL,{children:"Define Permissions"}),(0,g.jsxs)(i.Z,{children:["Let's define the permissions for each API in an Enum in the format ",(0,g.jsx)(j.Z,{children:"ACTION_RESOURCENAME"})," as mentioned in the last chapter."]}),(0,g.jsx)(k.Z,{fileName:"PermissionEnum.java",href:a+"/src/main/java/com/facadecode/spring/security/enums/PermissionEnum.java",children:"\npublic enum PermissionEnum {\n    CREATE_COURSE,\n    UPDATE_COURSE,\n    PLAY_COURSE,\n    LIST_STUDENTS,\n    LIST_INSTRUCTORS,\n    VIEW_PROFILE\n}\n"})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"Secure the APIs with Permissions"}),(0,g.jsxs)(i.Z,{children:["We will add the remaining API urls in the ",(0,g.jsx)(j.Z,{children:"SecurityConstants"}),". We will then apply permission-based access restrictions to the ",(0,g.jsx)("u",{children:"UpdateCourse"}),", ",(0,g.jsx)("u",{children:"PlayCourse"})," and ",(0,g.jsx)("u",{children:"ViewProfile"})," APIs in ",(0,g.jsx)(j.Z,{children:"HttpSecurity"})," configuration. Let's not do any changes in the existing role-based restrictions for now."]}),(0,g.jsx)(k.Z,{fileName:"SecurityConstants.java",href:a+"/src/main/java/com/facadecode/spring/security/constant/SecurityConstants.java",children:'\npublic static final String API_UPDATE_COURSES = "/api/v1/courses/*";\npublic static final String API_PLAY_COURSE = "/api/v1/courses/play/*";\npublic static final String API_VIEW_PROFILE = "/api/v1/users/*";  \n'}),(0,g.jsx)(k.Z,{fileName:"ApiSecurityConfig.java",href:a+"/src/main/java/com/facadecode/spring/security/config/ApiSecurityConfig.java",children:"\n@Bean\npublic SecurityFilterChain apiFilterChain(HttpSecurity http) throws Exception {\n    http\n        .csrf().disable()\n        .authorizeRequests(auth -> auth\n            .antMatchers(GET, PUBLIC_API_LIST).permitAll()\n            // Role based access restrictions\n            .antMatchers(API_LIST_STUDENTS, API_LIST_INSTRUCTORS).hasRole(ADMIN.name())\n            .antMatchers(POST, API_CREATE_COURSES).hasRole(INSTRUCTOR.name())\n            // Permission based access restrictions\n            .antMatchers(API_UPDATE_COURSES).hasAuthority(UPDATE_COURSE.name())\n            .antMatchers(API_PLAY_COURSE).hasAuthority(PLAY_COURSE.name())\n            .antMatchers(API_VIEW_PROFILE).hasAuthority(VIEW_PROFILE.name())\n            .anyRequest().authenticated()\n        )\n        .httpBasic();\n    return http.build();\n}\n"}),(0,g.jsxs)(i.Z,{children:["Before applying permission-based restrictions to the above three APIs, we were able to access them once authenticated successfully. But now we will get ",(0,g.jsx)("em",{children:"403 Forbidden"})," error for any user, as we have neither granted these Permissions to any Roles in the database nor updated the authorities in UserDetails."]})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"AppPermission Entity"}),(0,g.jsxs)(i.Z,{children:["In order to assign permissions dynamically without changing the code, we have to model them as a database entity and establish the relationship with ",(0,g.jsx)(j.Z,{children:"AppRole"})," entity. As we can assign any number of permissions to any roles, we have to model this as many-to-many relationship with ",(0,g.jsx)(j.Z,{children:"AppRole"})," entity."]}),(0,g.jsxs)(i.Z,{children:["Let's create an Entity class for Permission and define a standard ",(0,g.jsx)(j.Z,{children:"JPARepository"})," interface for the entity."]}),(0,g.jsx)(k.Z,{fileName:"AppPermission.java",href:a+"/src/main/java/com/facadecode/spring/security/domain/AppPermission.java",children:'\n@Entity(name = "app_permission")\n@Data\n@Builder\n@NoArgsConstructor\n@AllArgsConstructor\n@EqualsAndHashCode(of = "id")\npublic class AppPermission {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Enumerated(value = EnumType.STRING)\n    private PermissionEnum name;\n\n    @ManyToMany(fetch = FetchType.LAZY, mappedBy = "permissions")\n    @JsonIgnore\n    private Set<AppRole> assignedRoles;\n} \n'}),(0,g.jsx)(k.Z,{fileName:"AppPermissionRepository.java",href:a+"/src/main/java/com/facadecode/spring/security/repo/AppPermissionRepository.java",children:"\n@Repository\npublic interface AppPermissionRepository extends JpaRepository<AppPermission, Long> {\n}\n"})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"Update AppRole Entity"}),(0,g.jsxs)(i.Z,{children:["Now let's update the other side of the many-to-many relationship in ",(0,g.jsx)(j.Z,{children:"AppRole"})," entity, where AppRole entity will be the owner of the relation."]}),(0,g.jsx)(k.Z,{fileName:"AppRole.java",href:a+"/src/main/java/com/facadecode/spring/security/domain/AppRole.java",children:'\n// Other details omitted for brevity\npublic class AppRole {\n    @ManyToMany(fetch = FetchType.EAGER)\n    @JoinTable(\n        name = "app_role_to_permission",\n        joinColumns = @JoinColumn(name = "app_role_id"),\n        inverseJoinColumns = @JoinColumn(name = "app_permission_id")\n    )\n    private Set<AppPermission> permissions;\n}\n'})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"Grant Permissions"}),(0,g.jsxs)(i.Z,{children:["The next step after modeling the entity is to create the permission records corresponding to each ",(0,g.jsx)(j.Z,{children:"PermissionEnum"})," instances. And then assign them to the roles as mentioned in the below table to align with the Security objectives defined in the first chapter. We can do this in ",(0,g.jsx)(j.Z,{children:"AppDataInitialiser"})," class in order to make  these changes in the database while bootstraping the application."]}),(0,g.jsxs)("table",{className:"table table-striped mb-4",children:[(0,g.jsx)("thead",{children:(0,g.jsxs)("tr",{children:[(0,g.jsx)("th",{children:"Role"}),(0,g.jsx)("th",{children:"Permissions"})]})}),(0,g.jsxs)("tbody",{children:[(0,g.jsxs)("tr",{children:[(0,g.jsx)("td",{children:"Student"}),(0,g.jsx)("td",{children:"PLAY_COURSE, VIEW_PROFILE"})]}),(0,g.jsxs)("tr",{children:[(0,g.jsx)("td",{children:"Instructor"}),(0,g.jsx)("td",{children:"CREATE_COURSE, UPDATE_COURSE, PLAY_COURSE, VIEW_PROFILE"})]}),(0,g.jsxs)("tr",{children:[(0,g.jsx)("td",{children:"Admin"}),(0,g.jsx)("td",{children:"LIST_STUDENTS, LIST_INSTRUCTORS, VIEW_PROFILE"})]})]})]})]})]})},(0,e.s)(d.Z,"define-permissions"))},4046:function(a){a.exports={heading:"Heading_heading__aP_DN",underline:"Heading_underline__sSwtx"}},9472:function(a){a.exports={mark:"Mark_mark__8gh_T"}}},function(a){a.O(0,[734,428,637,274,774,888,179],function(){var b;return a(a.s=7043)}),_N_E=a.O()}])