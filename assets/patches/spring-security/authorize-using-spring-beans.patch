diff --git a/src/main/java/com/facadecode/spring/security/security/ServiceSecurity.java b/src/main/java/com/facadecode/spring/security/security/ServiceSecurity.java
new file mode 100644
index 0000000..3bf2b62
--- /dev/null
+++ b/src/main/java/com/facadecode/spring/security/security/ServiceSecurity.java
@@ -0,0 +1,17 @@
+package com.facadecode.spring.security.security;
+
+import com.facadecode.spring.security.domain.AppUser;
+import org.springframework.stereotype.Component;
+
+import static com.facadecode.spring.security.enums.RoleEnum.INSTRUCTOR;
+
+@Component("serviceSecurity")
+public class ServiceSecurity {
+    public Boolean isInstructor(AppUser appuser) {
+        return appuser.getRoles()
+                .stream()
+                .anyMatch(appRole ->
+                        appRole.getName().equals(INSTRUCTOR)
+                );
+    }
+}
diff --git a/src/main/java/com/facadecode/spring/security/service/UserService.java b/src/main/java/com/facadecode/spring/security/service/UserService.java
index 8a2a626..2d52ad4 100644
--- a/src/main/java/com/facadecode/spring/security/service/UserService.java
+++ b/src/main/java/com/facadecode/spring/security/service/UserService.java
@@ -46,14 +46,14 @@ public class UserService {
     }
 
     @PreAuthorize(Authority.VIEW_PROFILE)
-    @PostAuthorize("returnObject.username == authentication.name")
+    @PostAuthorize("@serviceSecurity.isInstructor(returnObject) or returnObject.username == authentication.name")
     public AppUser get(Long userId) {
         return appUserRepository.findById(userId)
                 .orElseThrow(() -> new RuntimeException(String.format("User with id %s not found", userId)));
     }
 
     @PreAuthorize(Authority.VIEW_PROFILE)
-    @PostAuthorize("returnObject.username == authentication.name")
+    @PostAuthorize("@serviceSecurity.isInstructor(returnObject) or returnObject.username == authentication.name")
     public AppUser get(String username) {
         return appUserRepository.findByUsername(username)
                 .orElseThrow(() -> new RuntimeException(String.format("User with username %s not found", username)));
