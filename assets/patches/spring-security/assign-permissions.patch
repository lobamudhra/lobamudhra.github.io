diff --git a/src/main/java/com/facadecode/spring/security/service/DbUserDetailsService.java b/src/main/java/com/facadecode/spring/security/service/DbUserDetailsService.java
index 78bfd76..7f720d9 100644
--- a/src/main/java/com/facadecode/spring/security/service/DbUserDetailsService.java
+++ b/src/main/java/com/facadecode/spring/security/service/DbUserDetailsService.java
@@ -7,7 +7,7 @@ import org.springframework.security.core.userdetails.User;
 import org.springframework.security.core.userdetails.UserDetails;
 import org.springframework.stereotype.Service;
 
-import java.util.Collections;
+import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 import java.util.stream.Collectors;
@@ -23,18 +23,34 @@ public class DbUserDetailsService {
                 .map(appUser -> User.builder()
                         .username(appUser.getUsername())
                         .password(appUser.getPassword())
-                        .authorities(Collections.EMPTY_SET)
-                        .roles(this.getRoles(appUser.getRoles()))
+                        .authorities(this.getRolesAndPermissions(appUser.getRoles()))
                         .build()
                 )
                 .collect(Collectors.toList());
     }
 
-    private String[] getRoles(Set<AppRole> roles) {
+    private Set<String> getRoles(Set<AppRole> roles) {
         return roles.stream()
-                .map(role -> role.getName().name())
-                .collect(Collectors.toSet())
-                .toArray(new String[0]);
+                .map(role -> String.format("ROLE_%s", role.getName().name()))
+                .collect(Collectors.toSet());
+    }
+
+    private Set<String> getPermissions(Set<AppRole> roles) {
+        return roles.stream()
+                .flatMap(role -> role.getPermissions().stream())
+                .map(permission -> permission.getName().name())
+                .collect(Collectors.toSet());
+    }
+
+    private String[] getRolesAndPermissions(Set<AppRole> appRoles) {
+        Set<String> roles = this.getRoles(appRoles);
+        Set<String> permissions = this.getPermissions(appRoles);
+        return new HashSet<String>() {
+            {
+                addAll(roles);
+                addAll(permissions);
+            }
+        }.toArray(new String[0]);
     }
 
 }
